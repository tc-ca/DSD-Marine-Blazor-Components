@typeparam T
@inherits InputBase<T>

<div class="form-group">
    @if (!string.IsNullOrWhiteSpace(this.Label))
    {
        <label for="@this.Id" class="form-label @(this.Required)">
            @if (this.IsRequired)
            {
                <b>@this.Label<span>*</span></b>
            }
            else
            {
                <b>@this.Label</b>
            }
        </label>
    }
    @if (!string.IsNullOrEmpty(InputAreaIcon))
    {
        <div style="position:relative">
            <i class="@InputAreaIcon" style="position:absolute; top:10px; left:auto; right:30px;"> </i>
            <InputSelect @attributes="this.AdditionalAttributes" id="@this.Id" name="@this.Id" class="@($"form-control {this.CssClass}")" @bind-Value="this.CurrentValueAsString" @oninput="this.OnChangeAsync">
                @if (this.ShowDefaultOption)
                {
                <option value="-1">@this.SelectLabel</option>
                }
            @if (this.SelectionList.Any())
                {
                    foreach (var item in this.SelectionList)
                    {
                    <option value="@item.Id">@item.Text</option>
                    }
                }
                else
                {
                @this.ChildContent
                }
        </InputSelect>
        <ValidationMessage For="@this.ValidationFor" />
    </div>
    }
    else
    {
        <InputSelect @attributes="this.AdditionalAttributes" id="@this.Id" name="@this.Id" class="@($"form-control {this.CssClass}")" @bind-Value="this.CurrentValueAsString" @oninput="this.OnChangeAsync">
            @if (this.ShowDefaultOption)
            {
            <option value="-1">@this.SelectLabel</option>
            }
        @if (this.SelectionList.Any())
            {
                foreach (var item in this.SelectionList)
                {
                <option value="@item.Id">@item.Text</option>
                }
            }
            else
            {
            @this.ChildContent
            }
        </InputSelect>
        <ValidationMessage For="@this.ValidationFor" />
    }
</div>
