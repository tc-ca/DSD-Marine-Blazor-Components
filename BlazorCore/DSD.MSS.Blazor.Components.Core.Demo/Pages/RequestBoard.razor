@page "/requestboard"

@using DSD.MSS.Blazor.Components.Core.Demo.Data
@using DSD.MSS.Blazor.Components.Core.Demo.Model
@using DSD.MSS.Blazor.Components.Table

@*@inject ServiceRequests ServiceRequestList*@

<h1>Request Board</h1>

<div class="row well">
    <div class="col-12">
        <div class="card  mb-3 mt-3">
            <ul class="nav nav-tabs">
                <li class="nav-item">
                    <a href="#" @onclick=@(() => GetOpenRequest(true)) data-toggle="tab" class="active nav-link">Open</a>
                </li>
                <li class="nav-item">
                    <a href="#" @onclick=@(() => GetOpenRequest(false)) data-toggle="tab" class="nav-link">Completed</a>
                </li>
            </ul>
            <div class="card-body">
                <Table TableClass="table table-striped table-hover" TableItem="ServiceRequestModel" PageSize="10" Items="ServiceRequestListItems" ColumnReorder="true" HeaderFilterChanged="@(()=>HandleHeaderFilterChanged())" ShowSearchBar="@ShowFilterHeader">
                    <Column TableItem="ServiceRequestModel" Title="Request ID" Field="@(x => x.RequestId)" Sortable="true" Width="12%" DefaultSortColumn="true" />
                    <Column TableItem="ServiceRequestModel" Title="Assigned To" Field="@(x => x.AssigneeEmployeeName)" Sortable="true" HeaderRowFilterable="true" Width="12%" />
                    <Column TableItem="ServiceRequestModel" Title="Request Type" Field="@(x => x.RequestType)" HeaderRowFilterable="true" Sortable="true" Width="15%" />
                    <Column TableItem="ServiceRequestModel" Title="Requestor Name" Field="@(x => x.RequestorName)" Sortable="true" HeaderRowFilterable="true" Width="12%" />
                    <Column TableItem="ServiceRequestModel" Title="Registry Type]" Field="@(x => x.RegistryType)" Sortable="true" HeaderRowFilterable="true" Width="12%" />
                    <Column TableItem="ServiceRequestModel" Title="Status" Field="@(x => x.RequestStatus)" HeaderRowFilterable="true" Sortable="true" Width="12%" />
                    <Column TableItem="ServiceRequestModel" Title="Time Before Deadline" Field="@(x => x.TimeBeforeDeadline)" Sortable="true" Width="12%" />
                    <Pager ShowPageNumber="true" ShowTotalCount="true" />
                </Table>
            </div>
        </div>
    </div>
</div>

@code {


    protected List<ServiceRequestModel> ServiceRequestListItems = new List<ServiceRequestModel>();
    protected bool ShowFilterHeader { get; set; } = false;

    protected override async Task OnInitializedAsync()
    {
        GetOpenRequest(true);
    }
    protected void  GetOpenRequest(bool isOpen)
    {
        var allServiceRequests = ServiceRequests.GetServiceRequests();
        if (isOpen)
        {
            ServiceRequestListItems = allServiceRequests.Where(x => x.RequestStatus != "Close").ToList();
        }
        else
        {
            ServiceRequestListItems = allServiceRequests.Where(x => x.RequestStatus == "Close").ToList();
        }

    }

    protected void HandleHeaderFilterChanged()
    {
        ShowFilterHeader = false;
        StateHasChanged();
    }

    protected void HandleFilterButtonClick()
    {
        ShowFilterHeader = !ShowFilterHeader;
    }


}
